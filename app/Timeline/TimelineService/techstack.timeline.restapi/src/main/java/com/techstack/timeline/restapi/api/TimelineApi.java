/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.0.0-beta3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.techstack.timeline.restapi.api;

import com.techstack.timeline.restapi.model.Error;
import com.techstack.timeline.restapi.model.TimelineEvent;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-04-18T15:42:11.577035+02:00[Europe/Amsterdam]")

@Validated
@Api(value = "timeline", description = "the timeline API")
public interface TimelineApi {

    default TimelineApiDelegate getDelegate() {
        return new TimelineApiDelegate() {};
    }

    @ApiOperation(value = "Get last 10 timeline events for a user", nickname = "getUserTimeline", notes = "", response = TimelineEvent.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Timeline events", response = TimelineEvent.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "User is not authorized to access a timeline"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/timeline",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default Mono<ResponseEntity<Flux<TimelineEvent>>> getUserTimeline(ServerWebExchange exchange) {
        return getDelegate().getUserTimeline(exchange);
    }

}
